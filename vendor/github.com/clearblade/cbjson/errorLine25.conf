//
//  This bus configuration file is in json format with the additional niceness of allowing
//  for comments. Duh.
//
//  Enjoy/Ignore
//

{
    "ScoringFunction": "IBeDaScorer",

    //
    //  Nodes is a mapping from logical name to ip address. ip addresses should ONLY
    //  appear here. We should have a command line method for ingesting ip addresses.
    //  Hardwiring them here sucks.
    //  Something like -nodes='NodeA:<ipaddr>,NodeB:<ipaddr>,NodeC:<ipaddr>,NodeD:<ipaddr>,NodeE:<ipaddr>'
    //  Then, we could ignore the "Nodes" below and use just what was passed in on the
    //  command line. Food for thought. It's pretty much what etcd does FYI
    //  Note: I'm calling these nodes and not hosts because we might be using docker containers, etc.
    //
    "Nodes": {
        "NodeA": "1.2.3.4",
        "NodeB": "2.3.4.5",
        "NodeC": "3.4.5.6",
        "NodeD": "10.4.5.6",
        "NodeE", "11.4.5.6"
    },

    //
    //  Groups are useful for logically naming a set of nodes that are intended to perform
    //  a specific function within the cluster. 
    //  (The stuff below is just an example. Not intended to make any sense.)
    //
    "Groups": {
        "DatabaseNode": ["NodeA"],
        "LoggingNode": ["NodeB"],
        "RunServiceNodes": ["NodeB", "NodeC", "NodeD"],
        "AnalyticsNodes": ["NodeD", "NodeE"],
        "ReportingNodes": ["NodeC"]
    },

    //
    //  The actual bus functions. They are of the form "<packageName>/<funcName>":"GroupName". I'm getting
    //  cute here and including the splat wildcard. Note that "LocalNode" is a pre-defined
    //  super special node name/group. If a specific module/function doesn't match/appear here
    //  then we fall back to using all cluster nodes and let the scoring function pick
    //  the winner.
    //
    //  If a function appears/matches here, then the resulting set of nodes (for example
    //  in the CoreCode/* case, the RunserviceNodes) are the candidates for the scoring
    //  function. A cool, over-architected thingie we could do would be to also provide
    //  different scoring functions in each of the "Functions" elements. Example:
    //          "CoreCode/InvokeCodeService": ["RunServiceNodes", "TheReallySmartServiceNodePicker"]
    //
    "Rules": [
        ["*/Init*", "LocalNode"],
        ["CoreCode/InvokeCodeService", "RunServiceNodes"],
        ["CoreLogger/*", "LoggingNodes"],
        ["Reporter/*", "ReportingNodes"]
    ]
}
